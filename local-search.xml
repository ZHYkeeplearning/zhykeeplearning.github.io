<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/12/10/%E5%9F%BA%E4%BA%8Ehexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/12/10/%E5%9F%BA%E4%BA%8Ehexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>非常感谢B站up：<strong>视频搬运崽啊</strong></p><p>此文就是基于此up视频制作而成，大家也可以去看他的视频：<a target="_blank" rel="noopener" href="https://www.bilibili.com/video/BV1vA411P7jq?spm_id_from=333.999.0.0">哔哩哔哩_bilibili</a></p><h2 id="一-、开发环境的准备"><a href="#一-、开发环境的准备" class="headerlink" title="一 、开发环境的准备"></a>一 、开发环境的准备</h2><h3 id="1-Node-js的安装"><a href="#1-Node-js的安装" class="headerlink" title="1.Node.js的安装"></a>1.Node.js的安装</h3><p>Node.js中文网：<a target="_blank" rel="noopener" href="http://nodejs.cn/">http://nodejs.cn/</a><br>Node.js:<a target="_blank" rel="noopener" href="https://nodejs.org/en/">https://nodejs.org/en/</a></p><p>基于上面两个网站，随自己喜好选择一个，进入Node.js官网下载最新版本的安装包即可。安装步骤保持默认即可（一直点next）。</p><h3 id="2-Git的安装"><a href="#2-Git的安装" class="headerlink" title="2.Git的安装"></a>2.Git的安装</h3><p>Git：<a target="_blank" rel="noopener" href="https://git-scm.com/">https://git-scm.com/</a></p><p>基于上面的网站，进入Git官网找到适应自己操作系统的版本下载即可。安装步骤保持默认即可（一直点next）。</p><h3 id="3-检验Node-js和Git是否安装成功"><a href="#3-检验Node-js和Git是否安装成功" class="headerlink" title="3.检验Node.js和Git是否安装成功"></a>3.检验Node.js和Git是否安装成功</h3><p>首先，进入wind系统的命令提示符界面。在键盘上同时按住Win+R，进入运行界面，再输入cmd点击确定，即可进入命令提示符界面。</p><p>在命令提示符界面输入：node -v（回车）。查看Node.js是否安装成功。</p><p>在命令提示符界面输入：npm -v（回车）。查看npm是否安装成功。</p><p>在命令提示符界面输入：git –version（回车）。查看Git是否安装成功。</p><p>基于此，开发环境就准备完成了!</p><h2 id="二、GitHub账号注册"><a href="#二、GitHub账号注册" class="headerlink" title="二、GitHub账号注册"></a>二、GitHub账号注册</h2><h3 id="1-注册GitHub账号"><a href="#1-注册GitHub账号" class="headerlink" title="1.注册GitHub账号"></a>1.注册GitHub账号</h3><h3 id="2-创建一个仓库"><a href="#2-创建一个仓库" class="headerlink" title="2.创建一个仓库"></a>2.创建一个仓库</h3><p>这个仓库是用来存放个人博客内容的，所以必须是特定的。仓库的名称必须有限制。</p><p>仓库名称设置为：<strong>“注册名.github,io”。</strong></p><h2 id="三、生成SSH-Keys"><a href="#三、生成SSH-Keys" class="headerlink" title="三、生成SSH Keys"></a>三、生成SSH Keys</h2><h3 id="1-生成SSH-Keys"><a href="#1-生成SSH-Keys" class="headerlink" title="1.生成SSH Keys"></a>1.生成SSH Keys</h3><p>进入系统任意一个文件夹中，右击鼠标点击<strong>”Git Base Here“</strong>，进入Git操作界面。</p><p>输入：ssh（默认是安装过的）。</p><p>输入：ssh-keygen -t rsa -C “邮箱地址”，（接着敲四次回车）</p><p>然后，在ssh安装位置找到.ssh文件里面有两个内容。打开<strong>“id_rsa.pub”</strong>，复制里面的全部代码（ctrl+a）。<br>再打开GitHub，先点击自己的头像，再点击setting。进入setting界面，下拉找到<strong>SSH and GPG keys</strong>，点击<strong>New SSH key</strong>。</p><p>创建SSH Key，title名字按自己喜好来命名。把钥匙复制到Key里面。点击Add ssh keys。</p><h3 id="2-检测ssh是否绑定成功"><a href="#2-检测ssh是否绑定成功" class="headerlink" title="2.检测ssh是否绑定成功"></a>2.检测ssh是否绑定成功</h3><p>再次进入Git操作界面</p><p>输入：ssh -T <a href="mailto:git@github.com">git@github.com</a></p><h2 id="四、本地生成博客"><a href="#四、本地生成博客" class="headerlink" title="四、本地生成博客"></a>四、本地生成博客</h2><h3 id="1-创建博客文件夹"><a href="#1-创建博客文件夹" class="headerlink" title="1.创建博客文件夹"></a>1.创建博客文件夹</h3><p>创建文件夹：Blog。这个文件夹是用来存放博客的。</p><h3 id="2-生成HEXO博客"><a href="#2-生成HEXO博客" class="headerlink" title="2.生成HEXO博客"></a>2.生成HEXO博客</h3><p>在Blog文件夹中，右击点Git Base Here；进入Git操作界面。<br>输入：hexo init(初始化hexo，hexo框架是别人做好的，把框架从人家的github页面拷贝下来)<br>输入：hexo server(本地生成hexo静态页面)</p><p>注：hexo clean指令可以清除生成的缓存文件。</p><h2 id="五、部署本地博客至互联网"><a href="#五、部署本地博客至互联网" class="headerlink" title="五、部署本地博客至互联网"></a>五、部署本地博客至互联网</h2><h3 id="1-修改-config-ym"><a href="#1-修改-config-ym" class="headerlink" title="1.修改_config.ym"></a>1.修改_config.ym</h3><p>在Blog中找到_config.yml文件，打开文件找到deploy，修改为：</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">deploy：</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span> <span class="string">(仓库地址)</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></tbody></table></figure><h3 id="2-部署博客至GitHub"><a href="#2-部署博客至GitHub" class="headerlink" title="2.部署博客至GitHub"></a>2.部署博客至GitHub</h3><p>再次进入Git操作界面，安装hexo-deployer-git自动部署发布工具。<br>在Blog中右击点Git Base Here，进入命令提示符。<br>输入：npm install hexo-deployer-git –save<br>输入：hexo g(生成页面的一个工具)<br>输入：git config –global user.email  *（邮箱）<br>输入：git config –global user.name *（GitHub名字）<br>输入：hexo d(上传本地文件至github仓库)</p><p>在上传过程中会弹出两个窗口：</p><ol><li>第一个窗口输入的是自己的Github用户名。</li><li>第二个窗口输入的是令牌。</li></ol><h3 id="3-生成自己的令牌"><a href="#3-生成自己的令牌" class="headerlink" title="3.生成自己的令牌"></a>3.生成自己的令牌</h3><p>进入自己的GitHub界面，点击头像，选择setting，进入设置界面。再下拉菜单找到并点击developer settings，进入界面。再点击Personal access tokens，选择create new（为令牌赋予权限，都选）。便生出了一个令牌。</p><p>注：令牌生成后请截图保存好，因为以后在进入这个界面是看不到的。</p><p>在此便完成了博客部署。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/12/07/hello-world/"/>
    <url>/2021/12/07/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span><br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
